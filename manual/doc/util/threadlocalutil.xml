<chapter id="util_threadlocalutil">
	<title>ThreadLocalUtil의 활용</title>
	<para>
		ThreadLocal을 Map과 유사한 인터페이스로 사용할 수 있는 기능을 제공한다.
	</para>
	<para>다음은 ThreadLocal이 가지고 있는 메소드에 대한 설명이다.</para>
	<informaltable>
		<tgroup cols="4">
			<colspec colnum="1" colname="col1" colwidth="2*" />
			<colspec colnum="2" colname="col2" colwidth="3*" />
			<colspec colnum="3" colname="col3" colwidth="4*" />
			<colspec colnum="4" colname="col4" colwidth="1*" />
			<thead>
				<row>
					<entry align="center">Method</entry>
					<entry align="center">Description</entry>
					<entry align="center">Example</entry>
					<entry align="center">Remarks</entry>
				</row>
			</thead>
			<tbody>
				<row>
					<entry><emphasis role="bold">getThreadLocal</emphasis>()</entry>
					<entry>ThreadLocal에 저장된 Map객체를 반환한다.</entry>
					<entry>ThreadLocalUtil.getThreadLocal()</entry>
					<entry></entry>
				</row>
				<row>
					<entry><emphasis role="bold">add</emphasis>(Object key, Object value)</entry>
					<entry>ThreadLocal에 해당 key와 value를 가진 항목을 추가한다.</entry>
					<entry>ThreadLocalUtil.add("key", "value")</entry>
					<entry></entry>
				</row>
				
				<row>
					<entry><emphasis role="bold">get</emphasis>(Object key)</entry>
					<entry>해당 키를 가진 항목의 값을 반환한다.</entry>
					<entry>ThreadLocalUtil.get("key")</entry>
					<entry></entry>
				</row>
				
				<row>
					<entry><emphasis role="bold">isExist</emphasis>(Object key)</entry>
					<entry>해당 키를 가진 항목이 존재하는 여부를 반환한다.</entry>
					<entry>ThreadLocalUtil.isExist("key")</entry>
					<entry></entry>
				</row>
				
				<row>
					<entry><emphasis role="bold">clearSharedInfo</emphasis>()</entry>
					<entry>ThreadLocal에 저장된 모든 정보를 제거한다.</entry>
					<entry>ThreadLocalUtil.clearSharedInfo()</entry>
					<entry></entry>
				</row>
				<row>
					<entry><emphasis role="bold">getThreadLocalKeys</emphasis>()</entry>
					<entry>ThreadLocal에 저장된 모든 항목의 키값을 배열로 반환한다.</entry>
					<entry>ThreadLocalUtil.getThreadLocalKeys()</entry>
					<entry></entry>
				</row>
				
				<row>
					<entry><emphasis role="bold">getThreadLocalValues</emphasis>()</entry>
					<entry>ThreadLocal에 저장된 모든 항목의 값을 배열로 반환한다.</entry>
					<entry>ThreadLocalUtil.getThreadLocalValues()</entry>
					<entry></entry>
				</row>
				
				<row>
					<entry><emphasis role="bold">size</emphasis>()</entry>
					<entry>ThreadLocal에 저장된 항목의 개수를 반환한다.</entry>
					<entry>ThreadLocalUtil.size()</entry>
					<entry></entry>
				</row>
				
				<row>
					<entry><emphasis role="bold">toPrintString</emphasis>()</entry>
					<entry></entry>
					<entry></entry>
					<entry><emphasis role="bold">deprecated</emphasis> since core 1.5.0. 
						printThreadLocal() 사용</entry>
				</row>
				
				<row>
					<entry><emphasis role="bold">printThreadLocal</emphasis>()</entry>
					<entry>ThreadLocal에 있는 항목을 콘솔로 출력한다.</entry>
					<entry>ThreadLocalUtil.printThreadLocal()</entry>
					<entry>since core 1.5.0.</entry>
				</row>
				
				
			</tbody>
		</tgroup>
	</informaltable>
</chapter>